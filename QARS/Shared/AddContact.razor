@inject ContactServices service;
@inject IFileReaderService FileReader;

@using Tewr.Blazor.FileReader;
@using QARS.Data.Models;


<link href="/css/modal.css" rel="stylesheet" />

<EditForm Model="@NewContact">
    <div class="form-group">
        <label for="tell">Tell</label>
        <input type="text" id="tell" class="form-control" @bind="@NewContact.Tell" />
    </div>
    <div class="form-group">
        <label for="contactaddress">Contactaddress</label>
        <input type="text" id="contactaddress" class="form-control" @bind="@NewContact.Contactaddress" />
    </div>
    <div class="form-group">
        <label for="contactaddress">City</label>
        <input type="text" id="contactaddress" class="form-control" @bind="@NewContact.City" />
    </div>
    <div class="form-group">
        <label for="discript">Discript</label>
        <input type="text" id="discript" class="form-control" @bind="@NewContact.Discript" />
    </div>
    <div class="form-group">
        <label for="description">Image</label>
        <FileSelector @ref="FileSelector" />
    </div>
    <div class="text-center p-3 mb-3">
        <button class="btn btn-success" @onclick="AddNewContact">Add Contact</button>
    </div>
</EditForm>

@code
{
    List<Contact> Contacts = new List<Contact>();
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    public Contact NewContact { get; set; } = new Contact();

    private FileSelector FileSelector;


    private async Task AddNewContact()
    {
        FileDownloadResult result = await FileSelector.DonwloadSingleAsync();

        var upload = result.Data;

        NewContact.Image = upload;

        await service.addcontactasync(NewContact);
        NewContact = new Data.Models.Contact();
        await BlazoredModal.Close(ModalResult.Ok(true));
    }
}
