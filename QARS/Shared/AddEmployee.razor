@inject EmployeeServices service
@inject AppDbContext dbContext

@using QARS.Data.Models;

<link href="/css/modal.css" rel="stylesheet" />

<EditForm Model="@NewEmployee" OnValidSubmit="@AddNewEmployee">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="email">Email</label>
        <input type="text" id="email" class="form-control" @bind="@NewEmployee.Email" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="text" id="password" class="form-control" @bind="@NewEmployee.RawPassword" />
    </div>
    <div class="form-group">
        <label for="firstname">Firstname</label>
        <input type="text" id="firstname" class="form-control" @bind="@NewEmployee.FirstName" />
    </div>
    <div class="form-group">
        <label for="lastname">Lastname</label>
        <input type="text" id="lastname" class="form-control" @bind="@NewEmployee.LastName" />
    </div>
    <div class="form-group">
        <label for="phonenumber">Phone Number</label>
        <input type="text" id="phonenumber" class="form-control" @bind="@NewEmployee.PhoneNumber" />
    </div>
    <div class="form-group">
        <label for="locationaddress">Address</label>
        <input type="text" id="locationaddress" class="form-control" @bind="@NewEmployee.Location.Address" />
    </div>
    <div class="form-group">
        <label for="locationcity">City</label>
        <input type="text" id="locationcity" class="form-control" @bind="@NewEmployee.Location.City" />
    </div>
    <div class="form-group">
        <label for="locationzip">ZipCode</label>
        <input type="text" id="locationzip" class="form-control" @bind="@NewEmployee.Location.ZipCode" />
    </div>
    <div class="form-group">
        <label for="locationcountry">Country</label>
        <input type="text" id="locationcountry" class="form-control" @bind="@NewEmployee.Location.CountryCode" />
    </div>
    <div class="text-center p-3 mb-3">
        <button class="btn btn-success" type="submit">Add Employee</button>
    </div>
    <ValidationSummary />
</EditForm>

@code {
    List<Employee> Employees = new List<Employee>();

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    public Employee NewEmployee { get; set; } = new Employee()
    {
        Location = new Location()

    };


    private async Task AddNewEmployee()
    {
        NewEmployee.LocationId = NewEmployee.Location.Id;
        NewEmployee.Password = Employee.GetPasswordHash(NewEmployee.Email, NewEmployee.RawPassword);
        await service.AddEmployeeAsync(NewEmployee);
        NewEmployee = new Employee()
        {
            Location = new Location()
        };

        await service.CloseModal(BlazoredModal);
    }

}