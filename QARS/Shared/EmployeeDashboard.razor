@using QARS.Data.Models
@using Microsoft.AspNetCore.Identity
@inject ReservationServices service
@inject CarServices car_service
@inject AppDbContext dbContext
@inject UserManager<User> UserManager

<link rel="stylesheet" href="/css/employeedash.css">

<AuthorizeView Roles="Employee">
    <Authorized>
        <div class="pickups">
            <h1>Todays Pick Ups</h1>
            <div class="customtablerow row bg-light">
                <table class="table">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">License Plate</th>
                            <th scope="col">Pickup date</th>
                            <th scope="col">Update</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Reservations.Where(r => r.Start.ToString("dd-MM-yyyy") == DateTimeOffset.Now.ToString("dd-MM-yyyy")).Where(r => r.Status.ToString() == "Planned").Any())
                        {
                            @foreach (var reservation in Reservations.Where(r => r.Start.ToString("dd-MM-yyyy") == DateTimeOffset.Now.ToString("dd-MM-yyyy")).Where(r => r.Status.ToString() == "Planned"))
                            {
                                string cityReservation = string.Empty;
                                string addressReservation = string.Empty;
                                string countryReservation = string.Empty;
                                string zipcodeReservation = string.Empty;
                                string cityStore = string.Empty;
                                string addressStore = string.Empty;
                                string countryStore = string.Empty;
                                string zipcodeStore = string.Empty;
                                foreach (var location in dbContext.Locations)
                                {
                                    if (location.Id == reservation.pickupLocation)
                                    {
                                        cityReservation = location.City;
                                        addressReservation = location.Address;
                                        countryReservation = location.CountryCode;
                                        zipcodeReservation = location.ZipCode;
                                    }
                                    if (location.Id == storeLocationId)
                                    {
                                        cityStore = location.City;
                                        addressStore = location.Address;
                                        countryStore = location.CountryCode;
                                        zipcodeStore = location.ZipCode;
                                    }
                                }

                                if (cityReservation == cityStore && addressReservation == addressStore && countryReservation == countryStore && zipcodeReservation == zipcodeStore)
                                {
                                    <tr>
                                        <td scope="col">@reservation.Id</td>
                                        @foreach (var car in Cars)
                                        {
                                            if (car.Id == reservation.CarId)
                                            {
                                                <td>@car.LicensePlate</td>
                                            }
                                        }

                                        <td>@reservation.Start.ToString("dd-MM-yyyy - HH:mm")</td>
                                        <td><button class="btn btn-warning" @onclick="(() => UpdateReservation(reservation))">Picked Up</button></td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="dropoffs">
            <h1>Todays Drop Offs</h1>
            <div class="customtablerow row bg-light">
                <table class="table">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">License Plate</th>
                            <th scope="col">Dropoff date</th>
                            <th scope="col">Update</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Reservations.Where(r => r.End.ToString("dd-MM-yyyy") == DateTimeOffset.Now.ToString("dd-MM-yyyy")).Where(r => r.Status.ToString() == "InProgress").Any())
                        {
                            @foreach (var reservation in Reservations.Where(r => r.End.ToString("dd-MM-yyyy") == DateTimeOffset.Now.ToString("dd-MM-yyyy")).Where(r => r.Status.ToString() == "InProgress"))
                            {
                                string cityReservation = string.Empty;
                                string addressReservation = string.Empty;
                                string countryReservation = string.Empty;
                                string cityStore = string.Empty;
                                string addressStore = string.Empty;
                                string countryStore = string.Empty;
                                foreach (var location in dbContext.Locations)
                                {
                                    if (location.Id == reservation.dropoffLocation)
                                    {
                                        cityReservation = location.City;
                                        addressReservation = location.Address;
                                        countryReservation = location.CountryCode;
                                    }
                                    if (location.Id == storeLocationId)
                                    {
                                        cityStore = location.City;
                                        addressStore = location.Address;
                                        countryStore = location.CountryCode;
                                    }
                                }

                                if (cityReservation == cityStore && addressReservation == addressStore && countryReservation == countryStore)
                                {
                                    <tr>
                                        <td scope="col">@reservation.Id</td>
                                        @foreach (var car in Cars)
                                        {
                                            if (car.Id == reservation.CarId)
                                            {
                                                <td>@car.LicensePlate</td>
                                            }
                                        }

                                        <td>@reservation.End.ToString("dd-MM-yyyy - HH:mm")</td>
                                        <td><button class="btn btn-warning" @onclick="(() => UpdateReservation(reservation))">Dropped Off</button></td>
                                    </tr>
                                }

                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="requestcars">
            <h1>Request car back</h1>
            <div class="customtablerow row bg-light">
                <table class="table">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">License Plate</th>
                            <th scope="col">Location</th>
                            <th scope="col">Request Car</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Cars.Where(c => c.Store.Id == storeId).Any())
                        {
                            foreach (var car in Cars.Where(c => c.Store.Id == storeId))
                            {
                                foreach (var store in dbContext.Stores.Where(s => s.Id == storeId))
                                {
                                    string cityCar = string.Empty;
                                    string addressCar = string.Empty;
                                    string countryCar = string.Empty;
                                    string zipcodeCar = string.Empty;
                                    string cityStore = string.Empty;
                                    string addressStore = string.Empty;
                                    string countryStore = string.Empty;
                                    string zipcodeStore = string.Empty;

                                    cityCar = car.Location.City;
                                    addressCar = car.Location.Address;
                                    countryCar = car.Location.CountryCode;
                                    zipcodeCar = car.Location.ZipCode;
                                    foreach (var location in dbContext.Locations)
                                    {
                                        if (location.Id == store.LocationId)
                                        {
                                            cityStore = location.City;
                                            addressStore = location.Address;
                                            countryStore = location.CountryCode;
                                            zipcodeStore = location.ZipCode;
                                        }
                                    }
                                    if (cityCar == cityStore && addressCar == addressStore && countryCar == countryStore && zipcodeCar == zipcodeStore)
                                    {

                                    }
                                    else
                                    {
                                        if (!(car.Requested))
                                        {
                                            <tr>
                                                <td>@car.Id</td>
                                                <td>@car.LicensePlate</td>
                                                <td>@car.Location.City, @car.Location.CountryCode</td>
                                                <td><button class="btn btn-warning" @onclick="(() => RequestCar(car))">Request Car</button></td>
                                            </tr>
                                        }
                                    }
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="requestedcars">
            <h1>Requested cars</h1>
            <div class="customtablerow row bg-light">
                <table class="table">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">License Plate</th>
                            <th scope="col">Store Name</th>
                            <th scope="col">Request Car</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Cars.Any())
                        {
                            foreach (var car in Cars)
                            {
                                foreach (var store in dbContext.Stores.Where(s => s.Id == storeId))
                                {
                                    string cityCar = string.Empty;
                                    string addressCar = string.Empty;
                                    string countryCar = string.Empty;
                                    string zipcodeCar = string.Empty;
                                    string cityStore = string.Empty;
                                    string addressStore = string.Empty;
                                    string countryStore = string.Empty;
                                    string zipcodeStore = string.Empty;

                                    cityCar = car.Location.City;
                                    addressCar = car.Location.Address;
                                    countryCar = car.Location.CountryCode;
                                    zipcodeCar = car.Location.ZipCode;

                                    foreach (var location in dbContext.Locations)
                                    {
                                        if (location.Id == store.LocationId)
                                        {
                                            cityStore = location.City;
                                            addressStore = location.Address;
                                            countryStore = location.CountryCode;
                                            zipcodeStore = location.ZipCode;
                                        }
                                    }
                                    if (cityCar == cityStore && addressCar == addressStore && countryCar == countryStore && zipcodeCar == zipcodeStore)
                                    {
                                        if (car.Requested)
                                        {
                                            <tr>
                                                <td>@car.Id</td>
                                                <td>@car.LicensePlate</td>
                                                <td>@car.Store.Name</td>
                                                <td><button class="btn btn-warning" @onclick="(() => SendCar(car))">Send Car</button></td>
                                            </tr>
                                        }
                                    }
                                   
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    List<Reservation> Reservations = new List<Reservation>();
    List<Car> Cars = new List<Car>();
    public int UserId = new int();
    public string Role = string.Empty;
    public int storeId = new int();
    public ReservationState state;
    int storeLocationId = new int();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //Define user and role
        var authState = await authenticationStateTask;
        if (authState.User.Identity.IsAuthenticated)
        {
            var user = await UserManager.GetUserAsync(authState.User);
            UserId = user.Id;
            foreach (var customer in dbContext.Customers)
            {
                if (customer.Id == UserId)
                {
                    Role = "Customer";
                }
            }
            foreach (var franchisee in dbContext.Franchisees)
            {
                if (franchisee.Id == UserId)
                {
                    Role = "Franchisee";
                }
            }
            foreach (var employee in dbContext.Employees)
            {
                if (employee.Id == UserId)
                {
                    Role = "Employee";
                }
            }
        }

        Cars = await car_service.GetCarAsync(0);

        await RefreshReservations(UserId);

    }
    private async Task RefreshReservations(int userid)
    {
        Reservations = await service.GetReservationAsync(storeId, "All");

        foreach (var employee in dbContext.Employees)
        {
            if (employee.Id == UserId)
            {
                foreach (var store in dbContext.Stores)
                {
                    if (employee.StoreId == store.Id)
                    {
                        storeId = store.Id;
                        storeLocationId = store.LocationId;
                        Console.WriteLine(storeLocationId);
                    }
                }
            }
        }

    }
    private async Task UpdateReservation(Reservation reservation)
    {
        Car updateCar = new Car();

        reservation.Status += 1;
        if(reservation.Status.ToString() == "Finished")
        {
            foreach(var car in Cars)
            {
                if(car.Id == reservation.CarId)
                {
                    foreach(var employee in dbContext.Employees)
                    {
                        if(employee.Id == UserId)
                        {
                            int storeId = employee.StoreId;
                            foreach(var store in dbContext.Stores.Where(s => s.Id == storeId))
                            {
                                foreach(var location in dbContext.Locations.Where(l => l.Id == store.LocationId))
                                {
                                    car.Location.Address = location.Address;
                                    car.Location.City = location.City;
                                    car.Location.ZipCode = location.ZipCode;
                                    car.Location.CountryCode = location.CountryCode;
                                    updateCar = car;
                                }
                            }
                        }
                    }
                }
            }
        }
        await car_service.UpdateCarAsync(updateCar);
        await service.UpdateReservationAsync(reservation);
    }
    private async Task RequestCar(Car car)
    {
        car.Requested = true;
        await car_service.UpdateCarAsync(car);
    }
    private async Task SendCar(Car car)
    {
        foreach(var store in dbContext.Stores)
        {
            if(car.Store.Id == store.Id)
            {
                foreach (var location in dbContext.Locations)
                {
                    if(location.Id == store.LocationId)
                    {
                        car.Location.City = location.City;
                        car.Location.Address = location.Address;
                        car.Location.CountryCode = location.CountryCode;
                        car.Location.ZipCode = location.ZipCode;
                    }
                }
            }
        }
        car.Requested = false;
        await car_service.UpdateCarAsync(car);
    }
}
