@inject AddlocationServices service
@*@inject AppDbContext dbContext*@

@using QARS.Data.Models;

<link href="/css/locationmodal.css" rel="stylesheet" />

<EditForm Model="@NewLocation" OnValidSubmit="AddNewLocation">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="address">Address</label>
        <input type="text" id="address" class="form-control" @bind="@NewLocation.Address" />
    </div>
    <div class="form-group">
        <label for="city">City</label>
        <input type="text" id="city" class="form-control" @bind="@NewLocation.City" />
    </div>
    <div class="form-group">
        <label for="zipcode">ZipCode</label>
        <input type="text" id="zipcode" class="form-control" @bind="@NewLocation.ZipCode" />
    </div>
    <div class="form-group">
        <label for="countrycode">CountryCode</label>
        <input type="text" id="countrycode" class="form-control" @bind="@NewLocation.CountryCode" />
    </div>
    <div class="text-center p-3 mb-3">
        <button class="btn btn-success" type="submit">Add Location</button>
    </div>
    <ValidationSummary />
</EditForm>

@code {
    List<Location> Locations = new List<Location>();
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }


    public Location NewLocation { get; set; } = new Location();

    private async Task AddNewLocation()
    {
        await service.AddLocationsAsync(NewLocation);
        NewLocation = new Data.Models.Location();
        await BlazoredModal.Close(ModalResult.Ok(true));
    }

}
