@page "/FileUpload"
@attribute [NavigationTab("File Upload")]

@using System.IO
@using Tewr.Blazor.FileReader
@using Microsoft.Extensions.Logging
@inject IFileReaderService FileReader

<h3>FileUploadTest</h3>

<div>
	<div>
		<FileSelector @ref="FileSelector"/>
	</div>
	<button @onclick="DownloadFiles">Start Download</button>
	<div>
		@foreach (var line in Logger.ToString().Split('\n'))
		{
			<span>@line</span><br />
		}
	</div>
</div>

@code {
	/// <summary>
	/// The path to the folder which contains the uploaded files.
	/// </summary>
	private const string DownloadPath = @"Downloads";

	/// <summary>
	/// A reference to the element that selects the files.
	/// </summary>
	private FileSelector FileSelector;

	private System.Text.StringBuilder Logger { get; } = new System.Text.StringBuilder();

	private async Task DownloadFiles()
	{
		Log("Started download...");
		FileDownloadResult result = await FileSelector.DonwloadSingleAsync();
		Log("Finished download.");

		Log("Downloaded file name: {0}", result.File.Name);
		Log("Downloaded file content type: {0}", result.ContentType);

		using var fileStream = File.OpenWrite(Path.Join(DownloadPath, result.File.Name));
		await fileStream.WriteAsync(result.Data);

		Log("Finished writing file.");
		Log();
	}

	private void Log(string format = "", params object[] args)
	{
		Logger.AppendFormat(format, args);
		Logger.AppendLine();

		StateHasChanged();
	}
}
