@page "/ManageReturns"
@inject ReturnsServices service
@inject AppDbContext dbContext
@using QARS.Data.Models

<link rel="stylesheet" href="/css/manage.css">

<AuthorizeView Roles="Admin">
    <Authorized>
        <div class="row d-flex justify-content-between">
            <div class="col-md-3">
                <UserDashboard />
            </div>

            <div class="col-md-9">
                <div class="back container">

                    <div class="customtablerow row bg-light">
                        <table class="table">
                            <thead class="thead-light">
                                <tr>
                                    <th scope="col">ID</th>

                                </tr>
                            </thead>
                            <tbody>
                                @if (dbContext.Returns.Any())
                                {
                                    @foreach (var Return in Returns)
                                    {
                                        <tr>
                                            <td scope="col">@Return.Id</td>
                                            <td>@Return.Reservations.Start</td>
                                            <td>@Return.Reservations.End</td>
                                            <td></td>
                                            <td><button class="btn btn-danger" @onclick="(() => DeleteReturns(Return))">Delete</button></td>
                                        </tr>
                                    }
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>You do not have permission to access this page. Please log in and try again.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    List<Return> Returns = new List<Return>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshReturns();
    }
    private async Task RefreshReturns()
    {
        Returns = await service.getReturnasync();
    }

    private async Task DeleteReturns(Return Return)
    {
        await service.Deletereturnssasync(Return);
        await RefreshReturns();
    }
}
