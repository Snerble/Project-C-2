@page "/managecontactinfo"
@inject ContactServices service
@inject UserManager<User> UserManager
@using QARS.Data.Models
@using Microsoft.AspNetCore.Identity

<link rel="searchbox stylesheet" href="/css/manage.css">

<AuthorizeView Roles="Admin">
    <Authorized>
        <div class="row d-flex justify-content-between">
            <div class="col-md-3">
                <UserDashboard />
            </div>

            <div class="col-md-9">
                <div class="back container">
                    <div class="heading">
                        <h1 class="display-3" style="text-align: left;">Contact Information of QARS Locations</h1>
                        <p class="lead" style="text-align: left;">All existing office locations are displayed below.</p>
                    </div>

                    <div class="customtablerow row bg-light">
                        <table class="table">
                            <thead class="thead-light">
                                <tr>
                                    <th scope="col">Id</th>
                                    <th scope="col">Tell</th>
                                    <th scope="col">Contactaddress</th>
                                    <th scope="col">Discript</th>
                                    <th scope="col">actions</th>

                                </tr>
                            </thead>
                            <tbody>
                                @if (contacts.Any())
                                {
                                    @foreach (var contact in contacts)
                                    {
                                        <tr>
                                            <td>@contact.Id</td>
                                            <td>@contact.Tell</td>
                                            <td>@contact.Contactaddress</td>
                                            <td>@contact.Discript</td>

                                            <td><button class="btn btn-danger" @onclick="(() => deletecontact(contact))">delete</button>  <button @onclick="@(() => showeditcontact(contact))" class="btn btn-warning">show & edit</button></td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr><td colspan="6"><strong>No locations available</strong></td></tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <button class="btn btn-success" @onclick="@(() => showaddcontact())"> Add Contact </button>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>You do not have permission to access this page. Please log in and try again.</p>
    </NotAuthorized>
</AuthorizeView>


@code
{
    List<Contact> contacts = new List<Contact>();


    protected override async Task OnInitializedAsync()
    {
        await refreshcontacts();
    }
    private async Task refreshcontacts()
    {
        contacts = await service.getContactasync();
    }

    private async Task deletecontact(Contact contact)
    {
        await service.Deletecontactsasync(contact);
        await refreshcontacts();
    }
    [CascadingParameter] public IModalService modal { get; set; }
    async Task showeditcontact(Contact contact)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(EditContact.Contact), contact);

        var editmodal = modal.Show<EditContact>("edit contact", parameters);
        var result = await editmodal.Result;
        StateHasChanged();
    }

    async Task showaddcontact()
    {
        var addmodal = modal.Show<AddContact>("add");
        var result = await addmodal.Result;
    }
}
