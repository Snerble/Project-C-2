@page "/managelocations"
@inject AddlocationServices service

<link rel="searchbox stylesheet" href="/css/manage.css">


<div class="col-12 d-flex justify-content-between">
    <div class="col-3">
        <UserDashboard />
    </div>

    <div class="col-9">
        <div class="back container">
            <div class="heading">
                <h1 class="display-3" style="text-align: left;">Location Manager</h1>
                <p class="lead" style="text-align: left;">All existing locations are displayed below. Create new locations using the 'Add Location' button. Edit and delete locations by using the action buttons displayed in the table.</p>
            </div>

            <div class="customtablerow row bg-light">
                <table class="table">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">Address</th>
                            <th scope="col">City</th>
                            <th scope="col">ZipCode</th>
                            <th scope="col">CountryCode</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Locations.Any())
                        {
                            @foreach (var location in Locations)
                            {
                                <tr >
                                    <td scope="col">@location.Id</td>
                                    <td>@location.Address</td>
                                    <td>@location.City</td>
                                    <td>@location.ZipCode</td>
                                    <td>@location.CountryCode</td>
                                    <td><button class="btn btn-danger" @onclick="(() => DeleteLocation(location))">Delete</button>  <button @onclick="@(() => ShowEditLocation(location))" class="btn btn-warning">Show & Edit</button></td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr><td colspan="6"><strong>No locations available</strong></td></tr>
                        }
                    </tbody>
                </table>
            </div>
            <button @onclick="@(() => ShowAddLocation())" class="btn btn-success">Add Location</button>
        </div>
    </div>
</div>

@code {
    List<QARS.Data.Models.Location> Locations = new List<QARS.Data.Models.Location>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshLocations();
    }
    private async Task RefreshLocations()
    {
        Locations = await service.GetLocationAsync();
    }

    private async Task DeleteLocation(QARS.Data.Models.Location location)
    {
        await service.DeleteLocationAsync(location);
        await RefreshLocations();
    }
    [CascadingParameter] public IModalService Modal { get; set; }
    async Task ShowEditLocation(QARS.Data.Models.Location location)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(EditLocation.Location), location);

        var editModal = Modal.Show<EditLocation>("Edit Location", parameters);
        var result = await editModal.Result;
        StateHasChanged();
    }

    async Task ShowAddLocation()
    {
        var addModal = Modal.Show<AddLocation>("Add Location");
        var result = await addModal.Result;
    }
}
