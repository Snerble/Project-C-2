@page "/managecarmodelswithmodal"
@inject CarModelServices service

<link rel="searchbox stylesheet" href="/css/managecarmodels.css">

<div class="back container">
    <div class="heading">
        <h1 class="display-3">Car Models Manager</h1>
        <p class="lead">All existing car models are displayed below. Create new car models using the form on the left. Edit car models by clicking them and editing them using the right form. On the far right side of the table you can delete car models from the database.</p>
        <button @onclick="@(() => ShowAddCarModel())" class="btn btn-success">Add Car Model</button>
    </div>

    <div class="customtablerow row bg-light">
        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">Brand</th>
                    <th scope="col">Type</th>
                    <th scope="col">Category</th>
                    <th scope="col">Fuel Type</th>
                    <th scope="col">Day Rate</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (CarModels.Any())
                {
                    @foreach (var carmodel in CarModels)
                    {
                <tr>
                    <td scope="col">@carmodel.Id</td>
                    <td>@carmodel.Brand</td>
                    <td>@carmodel.Type</td>
                    <td>@carmodel.Category</td>
                    @if (carmodel.FuelType == Data.Models.FuelType.Electric)
                    {
                        <td>@carmodel.Efficiency kWh/100 km</td>
                    }
                    else
                    {
                        <td>@carmodel.Efficiency L/km</td>
                    }
                    <td>€@carmodel.DayRate.ToString("0.00")</td>
                    <td><button class="btn btn-danger" @onclick="(() => DeleteCarModel(carmodel))">Delete</button><button @onclick="@(() => ShowEditCarModel(carmodel))" class="btn btn-warning">Edit</button></td>
                </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>No car models available</strong></td></tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    List<QARS.Data.Models.CarModel> CarModels = new List<QARS.Data.Models.CarModel>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshCarModels();
    }
    private async Task RefreshCarModels()
    {
        CarModels = await service.GetCarModelAsync();
    }

    private async Task DeleteCarModel(QARS.Data.Models.CarModel carmodel)
    {
        await service.DeleteCarModelAsync(carmodel);
        await RefreshCarModels();
    }
    [CascadingParameter] public IModalService Modal { get; set; }
    void ShowEditCarModel(QARS.Data.Models.CarModel carmodel)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(QARS.Pages.EditCarModel.CarModel), carmodel);

        Modal.Show<QARS.Pages.EditCarModel>("Edit Car Model", parameters);
    }

    void ShowAddCarModel()
    {
        Modal.Show<QARS.Pages.AddCarModel>("Add Car Model");
    }
}
